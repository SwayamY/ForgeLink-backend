services:
  api:
    container_name: api
    build: .
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    environment:
      POSTGRES_HOST: url_shortener_db
    volumes:
      - .:/app
    restart: always

  db:
    image: postgres:17
    container_name: url_shortener_db
    restart: always
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    ports:
      - "127.0.0.1:5432:5432" # Only allow local access
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "sweyam","-d","sweyam"]
      interval: 10s
      timeout: 5s
      retries: 5
      # command: >
      #   bash -c "docker-entrypoint.sh postgres & sleep 10 && \
      #   psql -U $POSTGRES_USER -d $POSTGRES_DB -c 'ALTER USER $POSTGRES_USER WITH SUPERUSER CREATEDB CREATEROLE;' && \
      #   wait"


  

  # pgbouncer:
  #   image: edoburu/pgbouncer
  #   container_name: pgbouncer
  #   restart: always
  #   depends_on:
  #     db:
  #       condition: service_healthy  
  #   env_file:
  #     - .env
  #   ports:
  #     - "6432:6432"
  #   environment:
  #     DB_HOST: url_shortener_db
  #     DB_PORT: 5432
  #     DB_USER: sweyam
  #     DATABASES: "url_shortener_db=host=url_shortener_db port=5432 user=${POSTGRES_USER} password=${POSTGRES_PASSWORD} dbname=${POSTGRES_DB} pool_mode=session"
  #     AUTH_USER: "sweyam"
  #     AUTH_PASS: "${POSTGRES_PASSWORD}"
  #     PGBOUNCER_AUTH_TYPE: md5
  #     PGBOUNCER_LISTEN_ADDR: 0.0.0.0
  #     PGBOUNCER_LISTEN_PORT: 6432
  #     PGBOUNCER_MAX_CLIENT_CONN: 100
  #   healthcheck:
  #     test: ["CMD", "pg_isready", "-h", "pgbouncer", "-p", "6432", "-U", "sweyam"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  #   command: ['/entrypoint.sh']

  backups:
    image: postgres:17
    container_name: db_backup
    restart: always
    depends_on:
      - db
    env_file:
      - .env
    volumes:
      - ./backups:/backups
    entrypoint: ["/bin/sh", "-c", "while true; do PGPASSWORD=$POSTGRES_PASSWORD pg_dump -h db -U $POSTGRES_USER $POSTGRES_DB > /backups/db_backup_$(date +%Y%m%d%H%M%S).sql; sleep 86400; done"]

  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"
<<<<<<< Updated upstream
=======
    
  locust:
    image: locustio/locust
    container_name: locust
    depends_on:
      - api
    ports:
      - 8089:8089
    volumes:
      - ./locust:/mnt/locust
    working_dir: /mnt/locust
>>>>>>> Stashed changes

    command: >
      -f locustfile.py
      --host http://api:8000
      --run-time 3m
    restart: always

volumes:
  postgres_data:
  backups:
